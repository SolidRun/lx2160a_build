From 7c9762a97177fe98b27c9ea76ad6a6b1287d2692 Mon Sep 17 00:00:00 2001
From: Josua Mayer <josua@solid-run.com>
Date: Sun, 27 Aug 2023 14:55:49 +0200
Subject: [PATCH 3/4] phy: lynx-28g: add support for specifying unmanaged lanes

Some lanes migt be used for non-networking purposes such as PCI-Express.
Add new device-tree property "fsl,unmanaged-lanes" for passing a bitmask
of unmanaged lanes which the driver will not touch.

Signed-off-by: Josua Mayer <josua@solid-run.com>
---
 .../devicetree/bindings/phy/fsl,lynx-28g.yaml |  6 ++++++
 drivers/phy/freescale/phy-fsl-lynx-28g.c      | 19 ++++++++++++++++++-
 2 files changed, 24 insertions(+), 1 deletion(-)

diff --git a/Documentation/devicetree/bindings/phy/fsl,lynx-28g.yaml b/Documentation/devicetree/bindings/phy/fsl,lynx-28g.yaml
index 4d91e2f4f247..71ff57927e32 100644
--- a/Documentation/devicetree/bindings/phy/fsl,lynx-28g.yaml
+++ b/Documentation/devicetree/bindings/phy/fsl,lynx-28g.yaml
@@ -20,6 +20,12 @@ properties:
   "#phy-cells":
     const: 1
 
+  fsl,unmanaged-lanes:
+    $ref: /schemas/types.yaml#definitions/uint8
+    description: Select which lanes not to touch via bitmask: 0 = managed by driver, 1 = unmanaged.
+    minimum: 0
+    maximum: 255
+
 required:
   - compatible
   - reg
diff --git a/drivers/phy/freescale/phy-fsl-lynx-28g.c b/drivers/phy/freescale/phy-fsl-lynx-28g.c
index a2b060e9e284..85574f808eb9 100644
--- a/drivers/phy/freescale/phy-fsl-lynx-28g.c
+++ b/drivers/phy/freescale/phy-fsl-lynx-28g.c
@@ -5,6 +5,7 @@
 #include <linux/phy.h>
 #include <linux/phy/phy.h>
 #include <linux/platform_device.h>
+#include <linux/property.h>
 #include <linux/workqueue.h>
 #include <linux/workqueue.h>
 
@@ -561,7 +562,9 @@ static int lynx_28g_probe(struct platform_device *pdev)
 	struct device *dev = &pdev->dev;
 	struct phy_provider *provider;
 	struct lynx_28g_priv *priv;
-	int i;
+	struct fwnode_handle *fwnode;
+	int i, ret;
+	u32 unmanaged_lanes;
 
 	priv = devm_kzalloc(&pdev->dev, sizeof(*priv), GFP_KERNEL);
 	if (!priv)
@@ -572,12 +575,26 @@ static int lynx_28g_probe(struct platform_device *pdev)
 	if (IS_ERR(priv->base))
 		return PTR_ERR(priv->base);
 
+	fwnode = dev_fwnode(dev);
+	if (fwnode && is_of_node(fwnode)) {
+		ret = of_property_read_u32(to_of_node(fwnode), "fsl,unmanaged-lanes", &unmanaged_lanes);
+		if (ret && ret != -EINVAL) {
+			dev_err(dev, "failed to read fsl,unmanaged-lanes property: %d\n", ret);
+			return ret;
+		}
+	}
+
 	lynx_28g_pll_read_configuration(priv);
 
 	for (i = 0; i < LYNX_28G_NUM_LANE; i++) {
 		struct lynx_28g_lane *lane = &priv->lane[i];
 		struct phy *phy;
 
+		if (unmanaged_lanes & (1 << i)) {
+			dev_info(dev, "unmanaged lane %d!\n", i);
+			continue;
+		}
+
 		memset(lane, 0, sizeof(*lane));
 
 		phy = devm_phy_create(&pdev->dev, NULL, &lynx_28g_ops);
-- 
2.43.0

